{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/nav/nav.component.css","webpack:///./src/app/nav/nav.component.html","webpack:///./src/app/nav/nav.component.ts","webpack:///./src/app/sign-search/sign-search.component.css","webpack:///./src/app/sign-search/sign-search.component.html","webpack:///./src/app/sign-search/sign-search.component.ts","webpack:///./src/app/todo-list/todo-list.component.css","webpack:///./src/app/todo-list/todo-list.component.html","webpack:///./src/app/todo-list/todo-list.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SignSearchComponent } from './sign-search/sign-search.component';\nimport { TodoListComponent } from './todo-list/todo-list.component';\n\nconst routes: Routes = [\n  { path: 'signSearch', component: SignSearchComponent },\n  { path: 'todoList', component: TodoListComponent }\n];\n\n@NgModule({\n  exports: [RouterModule],\n  imports: [RouterModule.forRoot(routes, { useHash: true })]\n})\n\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<app-nav></app-nav>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NavComponent } from './nav/nav.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport {\n  MatToolbarModule, MatButtonModule, MatSidenavModule, MatIconModule,\n  MatListModule, MatInputModule, MatFormFieldModule, MatTabsModule, MatCheckboxModule\n} from '@angular/material';\nimport { AppRoutingModule } from './/app-routing.module';\nimport { SignSearchComponent } from './sign-search/sign-search.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { TodoListComponent } from './todo-list/todo-list.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    SignSearchComponent,\n    TodoListComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatTabsModule,\n    MatCheckboxModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".sidenav-container {\\n  height: 100%;\\n}\\n\\n.sidenav {\\n  width: 200px;\\n  box-shadow: 3px 0 6px rgba(0, 0, 0, .24);\\n}\\n\"","module.exports = \"<mat-sidenav-container class=\\\"sidenav-container\\\">\\n  <mat-sidenav\\n    #drawer\\n    class=\\\"sidenav\\\"\\n    fixedInViewport=\\\"true\\\"\\n    [attr.role]=\\\"(isHandset$ | async) ? 'dialog' : 'navigation'\\\"\\n    [mode]=\\\"(isHandset$ | async) ? 'over' : 'side'\\\"\\n    [opened]=\\\"!(isHandset$ | async)\\\">\\n    <mat-toolbar color=\\\"primary\\\">Menu</mat-toolbar>\\n    <mat-nav-list>\\n      <a mat-list-item routerLink=\\\"/signSearch\\\">報名查詢</a>\\n      <a mat-list-item routerLink=\\\"/todoList\\\">待辦事項</a>\\n      <a mat-list-item href=\\\"#\\\">Link 3</a>\\n    </mat-nav-list>\\n  </mat-sidenav>\\n  <mat-sidenav-content>\\n    <mat-toolbar color=\\\"primary\\\">\\n      <button\\n        type=\\\"button\\\"\\n        aria-label=\\\"Toggle sidenav\\\"\\n        mat-icon-button\\n        (click)=\\\"drawer.toggle()\\\"\\n        *ngIf=\\\"isHandset$ | async\\\">\\n        <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\n      </button>\\n      <span>The F2E - 前端修練精神時光屋</span>\\n    </mat-toolbar>\\n    <div class=\\\"contain\\\">\\n      <router-outlet></router-outlet>\\n    </div>\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\\n\"","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches)\n    );\n  constructor(private breakpointObserver: BreakpointObserver) {}\n  }\n","module.exports = \"\"","module.exports = \"<form #myForm=\\\"ngForm\\\" (ngSubmit)=\\\"submit()\\\">\\n  <mat-form-field appearance=\\\"fill\\\">\\n    <mat-label>\\n      <mat-icon>email</mat-icon>\\n      信箱\\n    </mat-label>\\n    <input type=\\\"email\\\"\\n      name=\\\"信箱\\\"\\n      matInput\\n      required\\n      [(ngModel)]=\\\"mailValue\\\"\\n      #name=\\\"ngModel\\\"\\n      email/>\\n    <mat-hint>輸入信箱查詢報名狀態</mat-hint>\\n    <mat-error>輸入信箱阿阿阿</mat-error>\\n  </mat-form-field>\\n  <br />  <br />\\n  <button\\n    mat-raised-button\\n    color=\\\"primary\\\"\\n    type=\\\"submit\\\"\\n    [disabled]=\\\"!myForm.form.valid || progress\\\"\\n    [innerHTML]=\\\"progress?'載入中':'送出'\\\"></button>\\n  <p>{{result}}</p>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-sign-search',\n  templateUrl: './sign-search.component.html',\n  styleUrls: ['./sign-search.component.css']\n})\nexport class SignSearchComponent implements OnInit {\n  result = '';\n  mailValue = '';\n  progress = false;\n  constructor(private http: HttpClient) { }\n  ngOnInit() {\n  }\n\n  submit() {\n    this.progress = true;\n    this.http.post<any>('https://www.thef2e.com/api/isSignUp', { email: this.mailValue })\n      .subscribe(result => {\n        this.progress = false;\n        if (result.success === true) {\n          this.result = `${result.nickName}${result.message}`;\n        } else {\n          this.result = `${result.message}`;\n        }\n      });\n  }\n}\n","module.exports = \".add {\\r\\n  background: #3c3c3c;\\r\\n}\\r\\n\\r\\n.add .colms {\\r\\n  padding: 25px;\\r\\n}\\r\\n\\r\\n.list {\\r\\n  margin: 10px 0;\\r\\n  background: #3c3c3c;\\r\\n}\\r\\n\\r\\n.list .list-title {\\r\\n  border-bottom: 1px solid #303030;\\r\\n}\\r\\n\\r\\n.icon-group {\\r\\n  margin: 10px 0 10px 37px;\\r\\n}\\r\\n\\r\\n.icon-group mat-icon {\\r\\n  margin: 0 5px;\\r\\n  font-size: 18px;\\r\\n}\\r\\n\\r\\n.list-edit .colms {\\r\\n  padding: 25px;\\r\\n}\\r\\n\\r\\n.del-status {\\r\\n  color: #737373;\\r\\n  text-decoration: line-through;\\r\\n}\\r\\n\"","module.exports = \"<mat-tab-group>\\n  <mat-tab *ngFor=\\\"let tab of tabs;let tabIndex = index;\\\">\\n    <ng-template mat-tab-label>\\n      {{tab.title}}\\n    </ng-template>\\n\\n    <mat-nav-list *ngIf=\\\"tabIndex===0\\\">\\n      <mat-list-item [ngStyle]=\\\"{background: adding?'#525252':''}\\\" (click)=\\\"adding=true\\\">\\n        <mat-icon>add</mat-icon>\\n        <span *ngIf=\\\"!adding\\\">Add Task</span>\\n        <mat-form-field *ngIf=\\\"adding\\\">\\n            <input name=\\\"title\\\" type=\\\"text\\\" required matInput [(ngModel)]=\\\"addTitle\\\" />\\n          </mat-form-field>\\n      </mat-list-item>\\n    </mat-nav-list>\\n    <form #addForm=\\\"ngForm\\\" (ngSubmit)=\\\"add();\\\" *ngIf=\\\"adding\\\" class=\\\"add\\\">\\n      <div class=\\\"colms\\\">\\n        <!-- 到期日 -->\\n        <p>\\n          <mat-icon>date_range</mat-icon> Deadline\\n        </p>\\n        <mat-form-field>\\n          <input name=\\\"date\\\" type=\\\"date\\\" matInput [(ngModel)]=\\\"addDate\\\" />\\n        </mat-form-field>\\n        <!-- 附檔 -->\\n        <p>\\n          <mat-icon>insert_drive_file</mat-icon> File\\n        </p>\\n        <button mat-raised-button mat-icon-button color=\\\"accent\\\">\\n          <mat-icon>add</mat-icon>\\n        </button>\\n        <!-- 說明 -->\\n        <p>\\n          <mat-icon>chat</mat-icon> Comments\\n        </p>\\n        <mat-form-field>\\n          <textarea name=\\\"memo\\\" matInput placeholder=\\\"Type your memo here...\\\" [(ngModel)]=\\\"addMemo\\\"></textarea>\\n        </mat-form-field>\\n      </div>\\n      <div>\\n        <button type=\\\"button\\\" (click)=\\\"adding=false\\\" style=\\\"width: 50%\\\" mat-raised-button color=\\\"warning\\\">\\n          <mat-icon>close</mat-icon> Cancel\\n        </button>\\n        <button style=\\\"width: 50%\\\" mat-raised-button color=\\\"primary\\\">\\n          <mat-icon>add</mat-icon> Add Task\\n        </button>\\n      </div>\\n    </form>\\n\\n    <div class=\\\"list\\\" *ngFor=\\\"let item of getTasks(tabIndex);let taskIndex=index;\\\">\\n      <div class=\\\"list-title\\\" [ngStyle]=\\\"{background: item.important ? '#c2185b':'#3c3c3c'}\\\">\\n        <button color=\\\"{{item.edit?'primary':''}}\\\" (click)=\\\"item.edit=true;edit(taskIndex)\\\" mat-icon-button style=\\\"float: right;\\\">\\n          <mat-icon>create</mat-icon>\\n        </button>\\n        <button (click)=\\\"item.important=!item.important\\\" mat-icon-button style=\\\"float: right;\\\">\\n          <mat-icon [innerHTML]=\\\"item.important ? 'star' : 'star_border'\\\"></mat-icon>\\n        </button>\\n        <h2 style=\\\"padding-left: 16px\\\" [class]=\\\"item.selected?'del-status':''\\\">\\n          <mat-checkbox [(ngModel)]=\\\"item.selected\\\">{{item.title}}</mat-checkbox>\\n        </h2>\\n        <div class=\\\"icon-group\\\">\\n          <span *ngIf=\\\"item.date\\\">\\n            <mat-icon color=\\\"accent\\\">date_range</mat-icon>\\n            {{item.date}}\\n          </span>\\n          <mat-icon *ngIf=\\\"item.file\\\" color=\\\"accent\\\">insert_drive_file</mat-icon>\\n          <mat-icon *ngIf=\\\"item.memo\\\" color=\\\"accent\\\">chat</mat-icon>\\n        </div>\\n      </div>\\n      <!-- start編輯區 -->\\n      <form #editForm=\\\"ngForm\\\" (ngSubmit)=\\\"save(taskIndex);item.edit=false;\\\" *ngIf=\\\"item.edit\\\" class=\\\"list-edit\\\">\\n        <div class=\\\"colms\\\">\\n          <!-- 到期日 -->\\n          <p>\\n            <mat-icon>date_range</mat-icon> Deadline\\n          </p>\\n          <mat-form-field>\\n            <input name=\\\"date\\\" type=\\\"date\\\" matInput [(ngModel)]=\\\"newDate\\\" />\\n          </mat-form-field>\\n          <!-- 附檔 -->\\n          <p>\\n            <mat-icon>insert_drive_file</mat-icon> File\\n          </p>\\n          <button mat-raised-button mat-icon-button color=\\\"accent\\\">\\n            <mat-icon>add</mat-icon>\\n          </button>\\n          <!-- 說明 -->\\n          <p>\\n            <mat-icon>chat</mat-icon> Comments\\n          </p>\\n          <mat-form-field>\\n            <textarea name=\\\"memo\\\" matInput placeholder=\\\"Type your memo here...\\\" [(ngModel)]=\\\"newMemo\\\"></textarea>\\n          </mat-form-field>\\n        </div>\\n        <div>\\n          <button type=\\\"button\\\" (click)=\\\"item.edit=false\\\" style=\\\"width: 50%\\\" mat-raised-button color=\\\"warning\\\">\\n            <mat-icon>close</mat-icon> Cancel\\n          </button>\\n          <button style=\\\"width: 50%\\\" mat-raised-button color=\\\"primary\\\">\\n            <mat-icon>add</mat-icon> Save\\n          </button>\\n        </div>\\n      </form>\\n    </div>\\n  </mat-tab>\\n</mat-tab-group>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-todo-list',\n  templateUrl: './todo-list.component.html',\n  styleUrls: ['./todo-list.component.css']\n})\nexport class TodoListComponent implements OnInit {\n  tasks: ITask[];\n  tabs: ITab[];\n  newDate: string;\n  newMemo: string;\n  addDate: string;\n  addMemo: string;\n  adding: boolean;\n  addTitle: string;\n  constructor() { }\n\n  ngOnInit() {\n    this.tabs = [\n      { type: 0, title: 'My Tasks' },\n      { type: 1, title: 'In Progress' },\n      { type: 2, title: 'Completed' }];\n    this.tasks = [\n      { selected: false, title: 'test', important: false, edit: false, date: '2018/6/21' },\n      { selected: true, title: 'demo', important: false, edit: false, memo: '去買菜' },\n      { selected: false, title: 'test', important: true, edit: false }];\n  }\n\n  getTasks(index: number): ITask[] {\n    return this.tasks\n      .filter(i => {\n        switch (index) {\n          case 1:\n            return i.selected === false;\n          case 2:\n            return i.selected === true;\n          default:\n            return i;\n        }\n      });\n  }\n  edit(index: number) {\n    this.newDate = this.tasks[index].date;\n    this.newMemo = this.tasks[index].memo;\n  }\n\n  save(index: number) {\n    this.tasks[index].date = this.newDate;\n    this.tasks[index].memo = this.newMemo;\n  }\n  add() {\n    if (!this.addTitle) {\n      alert('請填寫 task 名稱');\n      return;\n    }\n    this.adding = false;\n    this.tasks.push({\n      selected: false,\n      title: this.addTitle,\n      important: false,\n      edit: false,\n      date: this.addDate,\n      memo: this.addMemo\n    });\n    this.addTitle = '';\n    this.addDate = '';\n    this.addMemo = '';\n  }\n}\n\ninterface ITab {\n  type: number;\n  title: string;\n}\n\ninterface ITask {\n  selected: boolean;\n  title: string;\n  important: boolean;\n  edit: boolean;\n  file?: any;\n  date?: string;\n  memo?: string;\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}